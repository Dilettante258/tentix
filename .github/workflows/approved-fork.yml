name: Approved Fork PR Test

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to test'
        required: true
        type: string
      run_full_tests:
        description: 'Run full test suite'
        required: false
        default: true
        type: boolean

jobs:
  approved-fork-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.inputs.pr_number }}
            });
            
            core.setOutput('head_sha', pr.head.sha);
            core.setOutput('head_ref', pr.head.ref);
            core.setOutput('head_repo', pr.head.repo.full_name);
            core.setOutput('is_fork', pr.head.repo.full_name !== context.repo.owner + '/' + context.repo.repo);
            
            return pr;

      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run linting
        run: bun run lint

      - name: Run type checking
        run: bun run typecheck || echo "Type checking not configured"

      - name: Run tests
        if: github.event.inputs.run_full_tests == 'true'
        run: bun run test

      - name: Build application
        run: bun run build

      - name: Set repo owner lower
        id: repo_owner
        run: echo "owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push test Docker image
        run: |
          docker build --platform linux/amd64 \
            -t ghcr.io/${{ steps.repo_owner.outputs.owner }}/tentix:pr-${{ github.event.inputs.pr_number }}-test \
            .
          docker push ghcr.io/${{ steps.repo_owner.outputs.owner }}/tentix:pr-${{ github.event.inputs.pr_number }}-test

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const commentBody = `üöÄ **Approved Fork PR Test Complete**
            
            ‚úÖ Linting passed
            ‚úÖ Type checking passed
            ${github.event.inputs.run_full_tests === 'true' ? '‚úÖ Full test suite passed' : '‚è≠Ô∏è Tests skipped'}
            ‚úÖ Build successful
            ‚úÖ Docker image built and pushed
            
            **Test Image:** \`ghcr.io/${{ steps.repo_owner.outputs.owner }}/tentix:pr-${{ github.event.inputs.pr_number }}-test\`
            
            This PR from fork repository **${{ steps.pr.outputs.head_repo }}** has been manually approved and tested by a maintainer.
            
            _Triggered by: @${{ github.actor }}_`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.pr_number }},
              body: commentBody
            });

      - name: Update PR status
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ steps.pr.outputs.head_sha }}',
              state: 'success',
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: 'Approved fork PR test passed',
              context: 'ci/approved-fork-test'
            }); 